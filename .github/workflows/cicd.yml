name: CI/CD
on:
  push:
    branches:
      - main

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      build: '[{ "package": "p1", "tenant": null, "architecture": null },{ "package": "p2", "tenant": "", "architecture": null },{ "package": "p3", "tenant": "t1", "architecture": null },{ "package": "p4", "tenant": "t2", "architecture": null }]'
    steps:
      - name: Build package matrix
        run: echo 'Hello'

  build_test_publish_amd64:
    name: Build amd64
    runs-on: ubuntu-latest
    needs: [setup]
    strategy:
      matrix:
        architecture: ["amd64"]
        include:
          - package: package-1
            tenant: ""
            architecture: ""
          - package: package-2
            tenant: ""
            architecture: ""
          - package: package-3
            tenant: "t1"
            architecture: ""
          - package: package-4
            tenant: "t2"
            architecture: ""
          - package: package-5
            tenant: ""
            architecture: ""
    steps:
      - name: Build ${{ matrix.package }} (tenant=${{matrix.tenant}} arch=${{ matrix.architecture }})
        run: echo ./stack build --skip-existing-image --architecture=${{ matrix.architecture }} --tenant="${{matrix.tenant}}" ${{ matrix.package }}

  build_test_publish_arm64:
    name: Build arm64
    runs-on: ubuntu-latest
    needs: [setup]
    strategy:
      matrix:
        architecture: ["arm64"]
        include: ${{ fromJSON(needs.setup.outputs.build) }}
    steps:
      - name: Build ${{ matrix.package }} (tenant=${{matrix.tenant}} arch=${{ matrix.architecture }})
        run: echo ./stack build --skip-existing-image --architecture=${{ matrix.architecture }} --tenant="${{matrix.tenant}}" ${{ matrix.package }}

  deploy_dev:
    name: Deploy Dev
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - tenant: "t1"
            packages: "package-1 package-2 package-3"
          - tenant: "t2"
            packages: "package-1 package-2 package-4"
    steps:
      - name: Deploy ${{ matrix.tenant }} (packages=${{matrix.packages}})
        run: echo ./stack deploy --tenant="${{matrix.tenant}}" ${{ matrix.packages }}
