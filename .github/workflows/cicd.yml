name: CI/CD
on:
  push:
    branches:
      - main

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      build: '[{ "package": "p1", "tenant": null },{ "package": "p2", "tenant": "" },{ "package": "p3", "tenant": "t1" },{ "package": "p4", "tenant": "t2" }]'
      tenants-dev: '[]'
    steps:
      - name: Build package matrix
        run: echo 'Hello'

  build_test_publish_amd64:
    name: Build amd64
    runs-on: ubuntu-latest
    needs: [setup]
    env:
      architecture: amd64
    strategy:
      matrix:
        include: ${{ fromJSON(needs.setup.outputs.build) }}
    steps:
      - name: Build (package=${{ matrix.package }} tenant=${{matrix.tenant}} arch=${{ env.architecture }})
        run: echo ./stack build --skip-existing-image --architecture="${{ env.architecture }}" --tenant="${{matrix.tenant}}" ${{ matrix.package }}

  build_test_publish_arm64:
    name: Build arm64
    runs-on: ubuntu-latest
    needs: [setup]
    env:
      architecture: arm64
    strategy:
      matrix:
        include: ${{ fromJSON(needs.setup.outputs.build) }}
    steps:
      - name: Build (package=${{ matrix.package }} tenant=${{matrix.tenant}} arch=${{ env.architecture }})
        run: echo ./stack build --skip-existing-image --architecture="${{ env.architecture }}" --tenant="${{matrix.tenant}}" ${{ matrix.package }}

  deploy_dev:
    name: Deploy Dev
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - tenant: "t1"
            packages: "package-1 package-2 package-3"
          - tenant: "t2"
            packages: "package-1 package-2 package-4"
    steps:
      - name: Deploy ${{ matrix.tenant }} (packages=${{matrix.packages}})
        run: echo ./stack deploy --tenant="${{matrix.tenant}}" ${{ matrix.packages }}
        
  setup_dev_tenants:
    name: Setup Dev tenants
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tenants: ${{ fromJSON(needs.setup.outputs.tenants) }}
    steps:
      - name: Setup ${{ matrix.tenant }}
        run: echo ./stack tenants setup --tenant="${{matrix.tenant}}"
